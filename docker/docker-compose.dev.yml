version: '3.8'

services:
  rag-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: rag-microservice-api
    ports:
      - "8000:8000"
    secrets:
      - huggingface_token
    volumes:
      # For development - mount source code for live reload
      - ../src:/app/src
      - ../streamlit:/app/streamlit
      - ../data:/app/data
      - ../logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - VECTOR_STORE_PERSIST_DIRECTORY=/app/data/chromadb    
    command: ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]    
    networks:
      - rag-network
    depends_on:
      - chromadb

  # Streamlit UI Service
  rag-ui:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-microservice-ui
    ports:
      - "8501:8501"
    secrets:
      - huggingface_token
    volumes:
      - ../data:/app/data
    environment:
      - PYTHONPATH=/app
      - API_URL=http://rag-api:8000
    command: ["streamlit", "run", "streamlit/app.py", "--server.address", "0.0.0.0", "--server.port", "8501"]
    depends_on:
      rag-api:
        condition: service_healthy
    networks:
      - rag-network

  # ChromaDB Service
  chromadb:
    image: chromadb/chroma:latest
    container_name: rag-chromadb
    ports:
      - "8001:8000"
    volumes:
      - ../data/chromadb:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge

secrets:
  huggingface_token:
    external: true
